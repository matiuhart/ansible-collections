---
- name: Check if Docker is already present.
  command: which docker
  failed_when: false
  changed_when: false
  check_mode: false
  register: docker_command_result

- name: Download Docker install convenience script.
  get_url:
    url: https://get.docker.com/
    dest: /tmp/get-docker.sh
    mode: 0775
  when: docker_command_result.rc == 1

- name: Run Docker install convenience script.
  command: /tmp/get-docker.sh
  environment:
    CHANNEL: stable
  when: docker_command_result.rc == 1

- name: Make sure Docker CE is the version specified.
  apt:
    name: "docker-ce={{ docker_version }}"
    state: present
    force: true
    install_recommends: "{{ docker_install_recommends }}"
  when: docker_version != 'latest'

- name: Ensure Docker is started.
  service:
    name: docker
    state: started
    enabled: true

- name: Install Docker Compose using Pip.
  pip:
    name: docker-compose
    state: present
    executable: "{{ docker_pip_executable }}"
  when: docker_install_compose | bool

- name: Ensure docker users are added to the docker group.
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"

- name: Creates /home/dockers folder
  file:
    path: /home/dockers
    state: directory

- name: Adding Cron to clean docker trash
  cron:
    name: "Purge docker trash"
    job: docker system prune -af
    weekday: mon

- name: Adding Cron to clean docker logs 
  cron:
    name: "Purge docker logs"
    job: truncate -s 0 /var/lib/docker/containers/*/*-json.log
    weekday: mon

- name: Adding Cron to clean docker volumes 
  cron:
    name: "Purge docker unused volumes"
    job: docker volume rm $(docker volume ls -qf dangling=true)
    weekday: mon