---
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Install Docker (Ansible <2.12).
  package:
    name: "{{ docker_package }}"
    state: "{{ docker_package_state }}"
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: "ansible_version.full is version_compare('2.12', '<')"

- name: Install Docker (Ansible >=2.12).
  package:
    name: "{{ docker_package }}"
    state: "{{ docker_package_state }}"
    allow_downgrade: true
  notify: restart docker
  ignore_errors: "{{ ansible_check_mode }}"
  when: "ansible_version.full is version_compare('2.12', '>=')"

- name: Ensure /etc/docker/ directory exists.
  file:
    path: /etc/docker
    state: directory
    mode: 0755
  when: docker_daemon_options.keys() | length > 0

- name: Configure Docker daemon options.
  copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: 0644
  when: docker_daemon_options.keys() | length > 0
  notify: restart docker

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers

- include_tasks: docker-compose.yml
  when: docker_install_compose | bool

- include_tasks: docker-users.yml
  when: docker_users | length > 0

- name: Adding Cron to clean docker trash
  cron:
    name: "Purge docker trash"
    job: docker system prune -af
    minute: "30"
    hour: "0"

- name: Adding Cron to clean docker logs 
  cron:
    name: "Purge docker logs"
    job: truncate -s 0 /var/lib/docker/containers/*/*-json.log
    weekday: mon

- name: Adding Cron to clean docker volumes 
  cron:
    name: "Purge docker unused volumes"
    job: docker volume rm $(docker volume ls -qf dangling=true)
    weekday: mon

- name: Ensure /home/docker directory exists.
  file:
    path: /home/docker
    state: directory
    owner: deployments
    group: docker