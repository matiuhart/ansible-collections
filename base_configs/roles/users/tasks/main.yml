---
# TODO chequear si docker est√° instalado y unir usuarios de norber, diego, matias y deployment
# a grupo docker

# Creaa grupo docker
- name: Ensure group "docker" exists
  ansible.builtin.group:
    name: docker
    state: present
    
- name: "Crea cuentas de usuarios"
  user:
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    groups: "{{ item.groups }}"
    state: "present"
    shell: "/bin/bash"
  with_items: "{{ users }}"

- name: "Borra cuentas en remove_users"
  user:
    name: "{{ item }}"
    state: "absent"
  with_items: "{{ remove_users }}"
  when: remove_users|bool

- name: "Copia authorized keys"
  authorized_key:
    user: "{{ item.username }}"
    key: "{{ lookup('file', '{{ inventory_dir }}/files/ssh/pub_keys/'+ item.username + '.pub') }}"
  with_items: "{{ users }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: "Permite sudo sin pass de admins"
  lineinfile:
    dest: "/etc/sudoers"
    state: "present"
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL) NOPASSWD: ALL"


#
## TODO Si el user deployments existe en variables de creacion de usuarios, chequear si existe priv key, 
#  si noexiste generarla y copiarla
#
# - name: set_fact when deployments_exists in key
#   ansible.builtin.set_fact:
#     deployments_exists: true
#   loop: "{{ lookup('ansible.builtin.dict', users) }}"
#   when: "'deployments' in item.username"


# - name: Verificando si existen claves ssh para usuario deployments
#   stat:
#     path: '{{ inventory_dir }}/roles/ssh/pub_keys/ssh-keys_deployments/'
#     #state: directory
#   register: id_rsa_status
#   delegate_to: localhost

# - name: debug
#   debug:
#     var:  id_rsa_status
#     verbosity: 0

# - name: Copiado de llaves ssh para usuario deployments
#   copy:
#     src: '{{ inventory_dir }}/roles/ssh/pub_keys/ssh-keys_deployments/'
#     dest: /home/deployments/.ssh/
#     decrypt: yes
#     owner: deployments
#     group: deployments
#     mode: 0400
#   when: id_rsa_status.stat.exists
